# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: iOS Safari Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: macos-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Cache node
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Install Appium Server
        run: npm install appium --location=global
      - name: Run Appium Server
        run: appium -p 4723 --log appium.log &
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Print iOS SDK version
        run: xcrun --sdk iphonesimulator --show-sdk-version
      - name: Get available simulators
        run: xcrun simctl list
      - name: Test with Gradle
        run: ./gradlew clean test -Denv=iphone.12.safari.simulator -DincludeGroups=ui.test.example --info
      - name: Print Appium logs
        if: ${{ always() }}
        run: cat appium.log
      - name: Upload artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: allure-results
          path: ./build/allure-results
